<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.itwillbs.camcar.mapper.Qna_Ask_managerMapper">
	<select id="selectQnaList" resultType="qna">
		SELECT *
		FROM qna
		ORDER BY
			qna_re_ref DESC
			, qna_re_seq ASC
		LIMIT
			#{startRow}     
			, #{listLimit}
	</select>
	
	<!-- 글 목록 조회 시 검색 기능 추가 -->
	<select id="selectQnaListCount" resultType="qna">
		SELECT *
		FROM qna
		<!-- 
		1. 검색어(searchKeyword)가 널스트링이 아닐 때 검색어를 추가하기 위한 WHERE 절 추가
		   => 검색어 데이터는 searchKeyword 변수에 저장되어 있으므로 변수명 그대로 활용
		   => 자바 문법과 동일하게 equals() 메서드를 통해 문자열 비교 수행
		-->
		<if test="!searchKeyword.equals('')">
			WHERE 
			<!-- 2. 검색타입(searchType)에 따른 WHERE 조건의 대상 컬럼명 변경하여 조건 작성 -->
			<!--    => searchType 변수의 문자열 비교(subject, content, subject_content, name) -->
			<!--    => 경우의 수가 2개 이상이므로 <choose><when><otherwise> 사용 -->
			<choose>
				<when test="searchType.equals('subject')">
					<!-- 
					주의! LIKE 절은 주로 % 기호와 결합하여 문장 포함 여부를 탐색하기 때문에
					SQL 문장에서 '%검색어%' 형식으로 지정한다.
					이 때, #{파라미터명} 형식으로 % 와 결합 시 파라미터 타입 감지 기능으로 인해
					문자열 데이터는 강제로 ""(또는 '') 기호가 붙음
					=> 따라서, '%'검색어'%' 형식이 되어 문법 오류 발생하므로
					   타입 감지가 수행되지 않도록 ${파라미터명} 형식으로 지정해야한다!
					   (${} 사용 시 데이터타입과 상관없이 데이터 그대로 표현)
					-->
					
					<!-- 만약 '%#{searchKeyword} 형식으로 지정 시 오류 발생함('%'검색어'%') -->
<!-- 				board_subject LIKE '%#{searchKeyword}%'  -->

					<!-- '%${searchKeyword} 형식으로 지정 시 정상 동작함('%검색어%') -->
<!-- 				board_subject LIKE '%${searchKeyword}%' -->
					
					<!-- CONCAT() 함수 활용하여 "%" 문자와 문자 데이터 결합도 가능 -->
					<!-- 주의! 이 때는 searchKeyword 데이터의 타입 감지 필요하므로 # 사용 -->
					board_subject LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchType.equals('content')">
<!-- 					board_content LIKE '%${searchKeyword}%' -->
					board_content LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchType.equals('subject_content')">
					<!-- 
					subject_content 로 검색 시 
					제목 또는 내용 둘 중 하나의 조건만 만족하면 되므로 OR 조건 결합 
					-->
<!-- 					board_subject LIKE '%${searchKeyword}%' -->
<!-- 					OR board_content LIKE '%${searchKeyword}%' -->
					board_subject LIKE CONCAT('%', #{searchKeyword}, '%')
					OR board_content LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchType.equals('name')">
<!-- 					board_name LIKE '%${searchKeyword}%' -->
					board_name LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<otherwise>
					1 = 1  -- WHERE 절을 포함시키되 조건을 걸고 싶지 않을 경우 활용 가능한 조건식(무조건 true 가 나오는 식이면 OK)
				</otherwise>
			</choose>
		</if>
		
		ORDER BY
			board_re_ref DESC
			, board_re_seq ASC
		LIMIT
			#{startRow}     -- Mapper 내의 메서드에서 @Param("startRow") 로 지정한 파라미터명 사용
			, #{listLimit}  -- Mapper 내의 메서드에서 @Param("listLimit") 로 지정한 파라미터명 사용
	</select>
</mapper>