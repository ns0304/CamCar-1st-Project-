<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.itwillbs.camcar.mapper.MyPageMapper">
	
<!-- 	나의 1:1문의 게시물 목록 조회 -->
	<select id="selectQnaList" resultType="qna">
		SELECT *
		FROM qna
		<!--  
		SELECT mem_id, qna_type_name, qna_inquery, qna_number, qna_date
		FROM qna
		JOIN qna_type
		ON qna.qna_type_idx = qna_type.qna_type_idx-->
		<if test="!searchKeyword.equals('')">
			WHERE 
			<choose>
				<when test="searchType.equals('subject')">
					qna_inquery LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchType.equals('content')">
<!-- 					board_content LIKE '%${searchKeyword}%' -->
					qna_content LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchType.equals('subject_content')">
					qna_subject LIKE CONCAT('%', #{searchKeyword}, '%')
					OR qna_content LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<otherwise>
					1 = 1  -- WHERE 절을 포함시키되 조건을 걸고 싶지 않을 경우 활용 가능한 조건식(무조건 true 가 나오는 식이면 OK)
				</otherwise>
			</choose>
		</if>
		LIMIT
			#{startRow}     
			, #{listLimit}
	</select>



	<!-- 1:1 문의 게시물 상세보기 -->
	<select id="selectQnaDetail" resultType="qna">
		SELECT *
		FROM qna
		WHERE qna_number = #{qna_number}
	</select>

	<!-- 전체 게시물 갯수 조회 -->
	<!-- 글 목록 조회 시 검색 기능 추가 -->
	<select id="selectQnaListCount" resultType="int">
		SELECT COUNT(*)
		FROM qna
		<if test="!searchKeyword.equals('')">
			WHERE 
			<choose>
				<when test="searchType.equals('inquery')">
					qna_inquery LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchType.equals('content')">
					qna_content LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchType.equals('inquery_content')">
					qna_inquery LIKE CONCAT('%', #{searchKeyword}, '%')
					OR qna_content LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchType.equals('name')">
					mem_id LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<otherwise>
					1 = 1  -- WHERE 절을 포함시키되 조건을 걸고 싶지 않을 경우 활용 가능한 조건식(무조건 true 가 나오는 식이면 OK)
				</otherwise>
			</choose>
		</if>
	</select>

<!-- 회원 상세정보 조회 SELECT-->
	<!-- 아이디(id)가 일치하는 레코드 조회-->
	<select id="selectMember" resultType="member">
		SELECT *
		FROM member_info
		WHERE mem_id = #{mem_id}
	</select>
	
	
	
	<!-- 회원 탈퇴 - UPDATE -->
	<!-- 아이디(id)가 일치하는 레코드의 회원상태(mem_status) 컬럼값을 3 으로 수정 -->
	<update id="updateWithdrawMember">
		UPDATE member_info
		SET
			mem_status = 3
			, mem_withdraw_date = now()
		WHERE
			mem_id = #{mem_id}
	</update>
	
<!-- 	운전자 상세정보 조회 SELECT -->
	<select id="selectDriver" resultType="driver">
<!-- 		SELECT  -->
<!-- 			m.mem_id, d.dri_name, d.dri_tel, d.dri_birthday -->
<!-- 			, d.lic_num, d,lic_info, d.lic_issue_date -->
<!-- 			, d.lic_expiration_date -->
<!-- 		FROM  -->
<!-- 			drivers_info d -->
<!-- 		JOIN  -->
<!-- 			member_info m -->
<!-- 		ON  -->
<!-- 			m.mem_id = d.mem_id -->
<!-- 		WHERE  -->
<!-- 			m.mem_id = #{mem_id} -->
		SELECT *
		FROM drivers_info
		WHERE mem_id = #{id}
	 </select>
	
	<!-- 회원 정보 수정 - UPDATE -->
	<!-- 이름, 비밀번호(옵션), 우편번호, 주소1, 주소2, 이메일(결합필요), 직업, 성별, 취미, 가입동기 -->
	<update id="updateMember">
		UPDATE member_info
		SET
		
			<!-- 
			새 패스워드(mem_passwd) 입력 여부에 따라 패스워드 UPDATE 여부가 결정되어야 한다!
			=> 동적 SQL 필요
			-->
			mem_passwd = #{mem_passwd}
			mem_post_code = #{mem_post_code}
			mem_add1 = #{mem_add1}
			mem_add2 = #{mem_add2}
			
		WHERE
			mem_tel = #{mem_tel}
			
<!-- 		UPDATE member_info -->
<!-- 		SET -->
		
<!-- 			새 패스워드(mem_passwd) 입력 여부에 따라 패스워드 UPDATE 여부가 결정되어야 한다! -->
<!-- 			=> 동적 SQL 필요 -->
<!-- 			--> -->
<!-- 			mem_post_code = #{mem_post_code} -->
<!-- 			mem_add1 = #{mem_add1} -->
<!-- 			mem_add2 = #{mem_add2} -->
			
<!-- 		WHERE -->
<!-- 			1 = 1 -->
	</update>
	

	
</mapper>